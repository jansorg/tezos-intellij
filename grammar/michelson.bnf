{
    tokens=[
        INT_CONSTANT='regexp:[0-9]+'
        NATURAL_NUMBER_CONSTANT='regexp:[0-9]+.[0-9]+]'
        STRING_CONSTANT='regexp:"[^"]*"'
        TIMESTAMP_STRING_CONSTANT=''
        SIGNATURE_STRING_CONSTANT=''
        KEY_STRING_CONSTANT=''
        KEY_HASH_STRING_CONSTANT=''
        TEZ_STRING_CONSTANT=''
        CONTRACT_STRING_CONSTANT=''
    ]
}

data ::=
    INT_CONSTANT
  | NATURAL_NUMBER_CONSTANT
  | STRING_CONSTANT
  | TIMESTAMP_STRING_CONSTANT
  | SIGNATURE_STRING_CONSTANT
  | KEY_STRING_CONSTANT
  | KEY_HASH_STRING_CONSTANT
  | TEZ_STRING_CONSTANT
  | CONTRACT_STRING_CONSTANT
  | 'Unit'
  | 'True'
  | 'False'
  | 'Pair' data data
  | 'Left' data
  | 'Right' data
  | 'Some' data
  | 'None'
  | '{' data ';' data? '}' //fixme
  | '{' 'Elt' data data ';' /*...*/ '}' //fixme
  | instruction

instruction ::=
    '{' instruction* '}'
  | 'DROP'
  | 'DUP'
  | 'SWAP'
  | 'PUSH' type data
  | 'SOME'
  | 'NONE' type
  | 'UNIT'
  | 'IF_NONE' '{' instruction* '}' '{' instruction* '}'
  | 'PAIR'
  | 'CAR'
  | 'CDR'
  | 'LEFT' type
  | 'RIGHT' type
  | 'IF_LEFT' '{' instruction /*...*/ '}' '{' instruction /*...*/ '}' //fixme
  | 'NIL' type
  | 'CONS'
  | 'IF_CONS' '{' instruction /*...*/ '}' '{' instruction /*...*/ '}' //fixme
  | 'EMPTY_SET' type
  | 'EMPTY_MAP' comparable_type type
  | 'MAP' '{' instruction /*...*/ '}'
  | 'ITER' '{' instruction /*...*/ '}'
  | 'MEM'
  | 'GET'
  | 'UPDATE'
  | 'IF' '{' instruction /*...*/ '}' '{' instruction /*...*/ '}'
  | 'LOOP' '{' instruction /*...*/ '}'
  | 'LOOP_LEFT' '{' instruction /*...*/ '}'
  | 'LAMBDA' type type '{' instruction /*...*/ '}'
  | 'EXEC'
  | 'DIP' '{' instruction /*... */'}'
  | 'FAILWITH'
  | 'CAST'
  | 'RENAME'
  | 'CONCAT'
  | 'ADD'
  | 'SUB'
  | 'MUL'
  | 'DIV'
  | 'ABS'
  | 'NEG'
  | 'MOD'
  | 'LSL'
  | 'LSR'
  | 'OR'
  | 'AND'
  | 'XOR'
  | 'NOT'
  | 'COMPARE'
  | 'EQ'
  | 'NEQ'
  | 'LT'
  | 'GT'
  | 'LE'
  | 'GE'
  | 'INT'
  | 'SELF'
  | 'TRANSFER_TOKENS'
  | 'SET_DELEGATE'
  | 'CREATE_ACCOUNT'
  | 'CREATE_CONTRACT'
  | 'IMPLICIT_ACCOUNT'
  | 'NOW'
  | 'AMOUNT'
  | 'BALANCE'
  | 'CHECK_SIGNATURE'
  | 'BLAKE2B'
  | 'HASH_KEY'
  | 'STEPS_TO_QUOTA'
  | 'SOURCE'
  | 'SENDER'

type ::=
    comparable_type
  | 'key'
  | 'unit'
  | 'signature'
  | 'option' type
  | 'list' type
  | 'set' comparable_type
  | 'operation'
  | 'contract' type
  | 'pair' type type
  | 'or' type type
  | 'lambda' type type
  | 'map' comparable_type type
  | 'big_map' comparable_type type

comparable_type ::=
    'int'
  | 'nat'
  | 'string'
  | 'tez'
  | 'bool'
  | 'key_hash'
  | 'timestamp'