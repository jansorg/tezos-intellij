parameter string;
return string;
storage unit;
code { <error descr="Type argument expected">EMPTY_SET</error>; # all commands expect a single type argument, which is missing here
    <error descr="Type argument expected">LEFT</error>;
    <error descr="Type argument expected">NIL</error>;
    <error descr="Type argument expected">NONE</error>;
    <error descr="Type argument expected">RIGHT</error>;

    <error descr="Type argument expected">EMPTY_SET</error><error descr="expected ';'"> </error>DROP; # all commands expect a single type argument, but a an instruction is provided
    <error descr="Type argument expected">LEFT</error><error descr="expected ';'"> </error>DROP;
    <error descr="Type argument expected">NIL</error><error descr="expected ';'"> </error>DROP;
    <error descr="Type argument expected">NONE</error><error descr="expected ';'"> </error>DROP;
    <error descr="Type argument expected">RIGHT</error><error descr="expected ';'"> </error>DROP;

    EMPTY_SET (Pair int int); # all commands expect a single type argument, but data is passed as argument
    LEFT (Pair int int);
    NIL (Pair int int);
    NONE (Pair int int);
    RIGHT (Pair int int);

    <error descr="Type argument expected">EMPTY_SET</error> { DROP; }; # all commands expect a single type argument, but an instruction block is passed as argument
    <error descr="Type argument expected">LEFT</error> { DROP; };
    <error descr="Type argument expected">NIL</error> { DROP; };
    <error descr="Type argument expected">NONE</error> { DROP; };
    <error descr="Type argument expected">RIGHT</error> { DROP; };
};
