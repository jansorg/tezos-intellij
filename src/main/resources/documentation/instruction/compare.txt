:: int : int : 'S   ->   int : 'S
:: nat : nat : 'S   ->   int : 'S
> COMPARE / x : y : S  =>  -1 : S
    iff x < y
> COMPARE / x : y : S  =>  0 : S
    iff x = y
> COMPARE / x : y : S  =>  1 : S
    iff x > y
Compare two numbers.

:: string : string : 'S   ->   int : 'S
> COMPARE / s : t : S  =>  -1 : S
    iff s < t
> COMPARE / s : t : S  =>  0 : S
    iff s = t
> COMPARE / s : t : S  =>  1 : S
    iff s > t
Compare two two strings.

:: timestamp : timestamp : 'S   ->   int : 'S
> COMPARE / seconds(t1) : seconds(t2) : S  =>  -1 : S
    iff t1 < t2
> COMPARE / seconds(t1) : seconds(t2) : S  =>  0 : S
    iff t1 = t2
> COMPARE / seconds(t1) : seconds(t2) : S  =>  1 : S
    iff t1 > t2
imestamp comparison.
